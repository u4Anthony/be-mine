{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/anthony/Dev/Sandbox/be-mine/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport Image from \"next/image\";\nimport gsap from \"gsap\";\n\nconst YES_IMAGES = [\n  \"/snoopyHeart.jpg\",\n  \"/tomHeart.gif\",\n  \"/snoopyWoodstock.jpg\"\n];\n\nconst NO_IMAGES = [\n  \"/sadPatrick.gif\",\n  \"/angryFerg.gif\"\n];\n\nconst YES_RESPONSE = [\n  \"HIP HIP HOORAY! Happy Valentines! ❤️\",\n  \"OMG you said yes! Happy Valentines! ❤️\",\n  \"YIPEEEEEEEE!! Happy Valentines! ❤️\",\n  \"You're the best, Happy Valentines! ❤️\",\n  \"My heart is doing backflips right now! 💝\",\n  \"This is the BEST Valentine's Day ever! 💖\",\n  \"I'm floating on cloud nine! Thank you! 💗\",\n  \"My heart just skipped a beat! You're amazing! 💓\",\n  \"Is this real life? Because it feels like a dream! 💘\",\n  \"Time to do my happy dance! 💃💕\",\n  \"You just made my whole year! 🥰\",\n  \"I can't stop smiling! You're wonderful! 😊❤️\",\n  \"This is better than chocolate! (And that's saying something!) 🍫💝\",\n  \"My heart is bursting with joy! 💖✨\",\n  \"You had me at 'Yes'! 🥰💘\",\n  \"Queue the love songs! 🎵❤️\",\n  \"Best. Decision. Ever! 🌟💖\",\n  \"I'm over the moon right now! 🌙💕\",\n  \"Time to celebrate with heart-shaped everything! 💝🎉\",\n  \"This calls for a love-themed party! 🎊❤️\"\n];\n\nconst NO_RESPONSE = [\n  \"This breaks my heart... 💔\",\n  \"Was that a misclick? 🖱️\",\n  \"I must not be good enough... 😢\",\n  \"Are you sure? 🥺\",\n  \"I'll wait for you to change your mind... ⏳\",\n  \"My heart just shattered into a million pieces 💔\",\n  \"Time to listen to sad love songs on repeat 🎵\",\n  \"Plot twist I wasn't expecting... 😢\",\n  \"Guess I'll just hug my pillow instead 🛏️\",\n  \"*dramatically falls to knees* WHYYYYY? 😭\",\n  \"Is it because I didn't buy enough chocolate? 🍫\",\n  \"My teddy bear will never reject me like this 🧸\",\n  \"Loading broken_heart.exe... 💔\",\n  \"I promise I'll learn better dad jokes! 🃏\",\n  \"Time to eat ice cream and watch rom-coms alone 🍦\",\n  \"Okay, but what if I learned to juggle? 🤹‍♂️\",\n  \"Error 404: Valentine not found 😢\",\n  \"My diary's gonna hear about this... 📔\",\n  \"Maybe next year... *sighs dramatically* 📅\",\n  \"I'll just high-five myself then... ✋\",\n  \"Fine, I'll share my chocolates with my cat instead 😿\",\n  \"Current status: Building a blanket fort of sadness 🏰\",\n  \"BRB, googling 'how to handle rejection' 🔍\",\n  \"Well, this is awkward... 😅\",\n  \"I guess we'll always have the friend zone 🤷‍♂️\"\n];\n\nexport default function Home() {\n  const [response, setresponse] = useState<'yes' | 'no' | null>(null);\n\n  useEffect(() => {\n      /*\n        Original Petal animation by DIACO : twitter.com/Diaco_ml  ||  codepen.io/MAW\n        powered by GSAP : https://www.greensock.com/\n      */\n\n      // Init GSAP animation\n      const total = 30;\n      const petalsContainer = document.getElementById(\"petals\");\n\n      if (petalsContainer) {\n        gsap.set(petalsContainer, { perspective: 600 });\n\n        // Create petals\n        for (let i=0; i<total; i++) {\n          const Div = document.createElement('div');\n          Div.className = 'dot';\n          gsap.set(Div, {\n            x: random(0, window.innerWidth),\n            y: random(-200, -150),\n            z: random(-200, 200)\n          });\n          petalsContainer.appendChild(Div);\n          animatePetal(Div);\n        }\n      }\n  }, []);\n\n  const random = (min: number, max: number) => min + Math.random() * (max - min);\n\n  const animatePetal = (elm: HTMLElement) => {\n    gsap.to(elm, {\n      y: window.innerHeight + 100,\n      duration: random(6, 15),\n      ease: \"none\",\n      repeat: -1,\n      delay: -15\n    });\n\n    gsap.to(elm, {\n      x: '+=100',\n      rotation: random(0, 180),\n      duration: random(4, 8),\n      repeat: -1,\n      yoyo: true,\n      ease: \"sine.inOut\"\n    });\n\n    gsap.to(elm, {\n      rotateX: random(0, 360),\n      rotateY: random(0, 360),\n      duration: random(2, 8),\n      repeat: -1, \n      yoyo: true,\n      ease: \"sine.inOut\",\n      delay: -5\n    });\n\n  }\n\n  const getRandomImage = (images: string[]) => {\n    const randomIndex = Math.floor(Math.random() * images.length);\n    return images[randomIndex];\n  }\n\n  const getRandomText = (responses: string[]) => {\n    const randomIndex = Math.floor(Math.random() * responses.length);\n    return responses[randomIndex];\n  }\n\n  const handleResponse = (answer: 'yes' | 'no' | null) => {\n    setresponse(answer);\n  };\n\n\n  return (\n    <div className=\"h-screen w-screen bg-gradient-to-t from-red-200 via-pink-400 to-rose-600\">\n      <div id=\"petals\" className=\"z-0\"/>\n      <main className=\"relative z-[2]\">\n        <div className=\"flex flex-row min-h-screen justify-center items-center\">\n          {response  === null ? (\n            <div className=\"divide-y divide-gray-200 overflow-hidden rounded-lg backdrop-blur-sm bg-white/30 shadow\">\n              <div className=\"px-4 py-5 sm:p-6> text-black text-center\">Will You Be My Valentine?</div>\n              <div className=\"px-4 py-4 sm:px-6 space-x-4 flex justify-center\">\n                <button \n                  className=\"w-24 rounded-md bg-emerald-600 px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm hover:bg-emerald-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                  onClick={() => handleResponse('yes')}\n                  >\n                  Yes\n                </button>\n                <button \n                  className=\"w-24 rounded-md bg-red-600 px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                  onClick={() => handleResponse('no')}\n                  >\n                  No\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              {response === 'yes' ? (\n                <div className=\"flex flex-col items-center\">\n                  <Image\n                    src={getRandomImage(YES_IMAGES)}\n                    alt=\"Happy Valentine\"\n                    width={400}\n                    height={400}\n                    className=\"rounded-lg shadow-lg mb-4\"\n                  />\n                  <p className=\"text-black text-xl font-bold\">\n                    {getRandomText(YES_RESPONSE)}\n                  </p>\n                  <button \n                  className=\"w-24 rounded-md bg-red-600 px-2.5 py-1.5 mt-4 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                  onClick={() => handleResponse(null)}\n                  >\n                  Change of Heart? 😢\n                </button>\n                </div>\n              ) : (\n                <div>\n                  <Image\n                    src={getRandomImage(NO_IMAGES)}\n                    alt=\"Happy Valentine\"\n                    width={400}\n                    height={400}\n                    className=\"rounded-lg shadow-lg mb-4\"\n                  />\n                  <p className=\"text-black text-xl font-bold\">\n                    {getRandomText(NO_RESPONSE)}\n                  </p>\n                  <button \n                  className=\"w-24 rounded-md bg-emerald-600 px-2.5 py-1.5 mt-4 text-sm font-semibold text-white shadow-sm hover:bg-emerald-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                  onClick={() => handleResponse(null)}\n                  >\n                    Change of Heart? 😀\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}